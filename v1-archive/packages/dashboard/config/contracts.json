{
  "networks": {
    "base-mainnet": {
      "chainId": 8453,
      "name": "Base Mainnet", 
      "rpcUrl": "https://mainnet.base.org",
      "blockExplorer": "https://basescan.org",
      "nativeCurrency": {
        "name": "Ethereum",
        "symbol": "ETH",
        "decimals": 18
      },
      "contracts": {
        "CrawlNFT": {
          "address": "TBD_AFTER_DEPLOYMENT",
          "type": "soulbound-nft",
          "description": "Soulbound NFT licenses for publishers"
        },
        "PaymentProcessor": {
          "address": "TBD_AFTER_DEPLOYMENT", 
          "implementation": "TBD_AFTER_DEPLOYMENT",
          "type": "upgradeable-proxy",
          "description": "USDC payment processing for crawl requests"
        },
        "USDC": {
          "address": "0x833589fcd6edb6e08f4c7c32d4f71b54bda02913",
          "type": "external-token",
          "decimals": 6,
          "symbol": "USDC",
          "description": "Base Mainnet USDC token"
        }
      }
    },
    "base-sepolia": {
      "chainId": 84532,
      "name": "Base Sepolia Testnet",
      "rpcUrl": "https://sepolia.base.org", 
      "blockExplorer": "https://sepolia.basescan.org",
      "nativeCurrency": {
        "name": "Ethereum",
        "symbol": "ETH", 
        "decimals": 18
      },
      "contracts": {
        "CrawlNFT": {
          "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
          "type": "soulbound-nft",
          "description": "Testnet soulbound NFT licenses"
        },
        "PaymentProcessor": {
          "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
          "implementation": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
          "type": "upgradeable-proxy", 
          "description": "Testnet USDC payment processing"
        },
        "USDC": {
          "address": "0x036CbD53842c5426634e7929541eC2318f3dCF7e",
          "type": "external-token",
          "decimals": 6,
          "symbol": "USDC",
          "description": "Base Sepolia USDC token"
        }
      }
    },
    "local": {
      "chainId": 31337,
      "name": "Local Hardhat",
      "rpcUrl": "http://localhost:8545",
      "blockExplorer": "http://localhost:8545",
      "nativeCurrency": {
        "name": "Ethereum",
        "symbol": "ETH",
        "decimals": 18
      },
      "contracts": {
        "CrawlNFT": {
          "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
          "type": "soulbound-nft",
          "description": "Local dev soulbound NFT licenses"
        },
        "PaymentProcessor": {
          "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
          "implementation": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
          "type": "upgradeable-proxy",
          "description": "Local dev USDC payment processing"
        },
        "USDC": {
          "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
          "type": "external-token",
          "decimals": 6,
          "symbol": "USDC",
          "description": "Local dev USDC token"
        }
      }
    }
  },
  "defaultNetwork": "local",
  "productionNetwork": "base-mainnet",
  "features": {
    "soulboundNFTs": true,
    "upgradeableContracts": true,
    "gasOptimized": true,
    "securityHardened": true
  },
  "abi": {
    "CrawlNFT": [
      "function mintLicense(address publisher, string calldata termsURI) external",
      "function batchMintLicenses(address[] calldata publishers, string[] calldata termsURIs) external", 
      "function hasLicense(address publisher) external view returns (bool)",
      "function getPublisherTokenId(address publisher) external view returns (uint256)",
      "function getTermsURI(uint256 tokenId) external view returns (string memory)",
      "function totalSupply() external view returns (uint256)",
      "function owner() external view returns (address)"
    ],
    "PaymentProcessor": [
      "function payPublisher(address publisher, uint256 amount) external",
      "function payPublisherByNFT(address crawlNFTContract, uint256 tokenId, uint256 amount) external",
      "function batchPayCrawlFees(uint256[] calldata tokenIds, uint256[] calldata amounts) external",
      "function baseCrawlFee() external view returns (uint128)",
      "function protocolFeePercent() external view returns (uint96)", 
      "function feeRecipient() external view returns (address)",
      "function usdcToken() external view returns (address)",
      "function crawlNFTContract() external view returns (address)",
      "function owner() external view returns (address)"
    ],
    "USDC": [
      "function balanceOf(address account) external view returns (uint256)",
      "function allowance(address owner, address spender) external view returns (uint256)",
      "function approve(address spender, uint256 amount) external returns (bool)",
      "function transfer(address to, uint256 amount) external returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) external returns (bool)",
      "function decimals() external view returns (uint8)",
      "function symbol() external view returns (string memory)"
    ]
  },
  "metadata": {
    "version": "1.0.0",
    "lastUpdated": "2025-10-01T19:00:00.000Z",
    "description": "Tachi Protocol smart contract configuration for Base networks",
    "repository": "https://github.com/tachi-protocol/tachi",
    "documentation": "https://docs.tachi.ai"
  }
}