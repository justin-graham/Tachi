# =============================================================================
# TACHI CONTRACTS - ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains Foundry/Hardhat contract deployment configuration
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your actual values
# 3. ⚠️  NEVER commit .env files with real private keys!
#
# For production deployments, use:
# - Hardware wallet (Ledger/Trezor)
# - AWS KMS or HashiCorp Vault
# - Environment variables on your CI/CD platform
# =============================================================================

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
NETWORK=base # Options: base | base-sepolia | localhost
NODE_ENV=development # Options: development | staging | production

# =============================================================================
# RPC ENDPOINTS
# =============================================================================
# Base Mainnet RPC
# Get API key from: https://www.alchemy.com/
BASE_RPC_URL=https://base-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Base Sepolia Testnet RPC
BASE_SEPOLIA_RPC_URL=https://base-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Alchemy API Key (used across multiple networks)
API_KEY_ALCHEMY=YOUR_ALCHEMY_API_KEY

# =============================================================================
# CONTRACT VERIFICATION
# =============================================================================
# Get from: https://basescan.org/apis
BASESCAN_API_KEY=your_basescan_api_key_here
ETHERSCAN_API_KEY=your_basescan_api_key_here

# =============================================================================
# DEPLOYMENT WALLET
# =============================================================================
# ⚠️  CRITICAL SECURITY WARNING:
# - NEVER use this default private key for testnet or mainnet!
# - NEVER commit real private keys to version control!
# - For production, use a hardware wallet or secure key management system

# Local Development Only (Anvil/Hardhat default account #0)
PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

# For testnet/production:
# PRIVATE_KEY=your_secure_private_key_here # ⚠️ Keep this secret!

# =============================================================================
# DEPLOYMENT PARAMETERS
# =============================================================================
# Gas Configuration
MAX_GAS_PRICE_GWEI=50
GAS_LIMIT_BUFFER=1.2

# Deployment Settings
DEPLOYMENT_CONFIRMATIONS=3 # Wait for N confirmations
DEPLOYMENT_TIMEOUT=300000 # 5 minutes

# =============================================================================
# MULTISIG GOVERNANCE (Production)
# =============================================================================
# For production deployments, ownership should be transferred to a multisig
MULTISIG_CONTRACT_ADDRESS=0x_PRODUCTION_MULTISIG_ADDRESS_HERE
MULTISIG_REQUIRED_SIGNATURES=3
MULTISIG_TOTAL_SIGNERS=5

# Multisig Signer Addresses
SIGNER_CEO_ADDRESS=0x742d35Cc6634C0532925a3b8D0ed9C0eB4F8C4FA
SIGNER_CTO_ADDRESS=0x8ba1f109551bD432803012645Hac136c22C8C4dA
SIGNER_SECURITY_ADDRESS=0x3C44CdDdB6a900fa2b585dd299e03d12FA429D3C
SIGNER_OPERATIONS_ADDRESS=0x90F79bf6EB2c4f870365E785982E1f101E93b906
SIGNER_ADVISOR_ADDRESS=0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65

# =============================================================================
# MONITORING & ALERTS (Production)
# =============================================================================
# Sentry (for deployment monitoring)
SENTRY_DSN=https://your_sentry_dsn@sentry.io/project-id

# Tenderly (for contract monitoring)
TENDERLY_PROJECT_ID=your_tenderly_project_id_here
TENDERLY_API_KEY=your_tenderly_api_key_here

# Slack Alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
SLACK_CRITICAL_CHANNEL=#tachi-critical

# Email Alerts
EMAIL_CRITICAL_RECIPIENTS=ceo@tachi.com,security@tachi.com

# =============================================================================
# HARDWARE WALLET SUPPORT (Production)
# =============================================================================
# For production deployments with hardware wallets
LEDGER_DERIVATION_PATH=m/44'/60'/0'/0/0
TREZOR_DERIVATION_PATH=m/44'/60'/0'/0/0
HARDWARE_WALLET_SUPPORT=false # Set to true for hardware wallet deployments

# =============================================================================
# DEPLOYED CONTRACT ADDRESSES (Auto-populated after deployment)
# =============================================================================
# Base Mainnet
CRAWL_NFT_ADDRESS=0xc9e45f1003063826C77107A92E354fAeBeD5241c
PAYMENT_PROCESSOR_ADDRESS=0x8B79808075f8ed2c0871A271431b3260bc0D3f70

# Base Sepolia
SEPOLIA_CRAWL_NFT_ADDRESS=0xE527DDaC2592FAa45884a0B78E4D377a5D3dF8cc
SEPOLIA_PAYMENT_PROCESSOR_ADDRESS=0x7C503301eB8fA9dC7C3d2242487f18598321E479

# =============================================================================
# USAGE EXAMPLES
# =============================================================================
# Deploy to localhost:
# forge script scripts/deploy.ts --rpc-url http://localhost:8545 --broadcast

# Deploy to Base Sepolia:
# forge script scripts/deploy.ts --rpc-url $BASE_SEPOLIA_RPC_URL --broadcast --verify

# Deploy to Base Mainnet:
# forge script scripts/deploy.ts --rpc-url $BASE_RPC_URL --broadcast --verify

# Verify existing contract:
# forge verify-contract --chain-id 8453 --compiler-version v0.8.20 CONTRACT_ADDRESS src/Contract.sol:ContractName

# =============================================================================
# NOTES
# =============================================================================
# - See ../../.env.example for shared environment variables
# - See DEPLOYMENT_STATUS.md for current deployment addresses
# - For production deployments, follow the security checklist in docs/
# - Always test on Base Sepolia before deploying to mainnet
