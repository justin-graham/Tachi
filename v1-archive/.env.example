# =============================================================================
# TACHI PROTOCOL - ROOT ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains shared environment variables used across all packages
#
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your actual values (NEVER use these placeholders in production)
# 3. NEVER commit .env files with real secrets to version control
#
# For package-specific variables, see:
# - packages/dashboard/.env.example
# - packages/api/.env.example
# - packages/contracts/.env.example
# - packages/gateway-cloudflare/wrangler.toml
# =============================================================================

# =============================================================================
# ENVIRONMENT
# =============================================================================
NODE_ENV=development # Options: development | staging | production

# =============================================================================
# SUPABASE DATABASE (Shared across all packages)
# =============================================================================
# Get these from: https://supabase.com/dashboard -> Project Settings -> API
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# PostgreSQL Direct Connection (Optional - for migrations and direct DB access)
# Format: postgresql://postgres:[password]@db.[project-ref].supabase.co:5432/postgres
DATABASE_URL=postgresql://postgres:your_password@db.your-project-ref.supabase.co:5432/postgres

# =============================================================================
# REDIS CACHE (Shared caching layer)
# =============================================================================
# Sign up at: https://redis.com/try-free/ or use local Redis
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password_here
REDIS_HOST=localhost
REDIS_PORT=6379

# =============================================================================
# BLOCKCHAIN NETWORK CONFIGURATION
# =============================================================================
# Base Mainnet RPC (Production)
# Get API key from: https://www.alchemy.com/
BASE_RPC_URL=https://base-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Base Sepolia RPC (Testing)
BASE_SEPOLIA_RPC_URL=https://base-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY

# Alchemy API Key (used by multiple packages)
ALCHEMY_API_KEY=YOUR_ALCHEMY_API_KEY

# Tachi upstream API configuration
TACHI_API_BASE_URL=https://api.tachi.com
ADMIN_WALLET_PRIVATE_KEY=
AUTO_PROCESS_WITHDRAWALS=false

# =============================================================================
# DEPLOYED CONTRACT ADDRESSES
# =============================================================================
# Base Mainnet (Chain ID: 8453) - PRODUCTION
CRAWL_NFT_CONTRACT_ADDRESS=0xc9e45f1003063826C77107A92E354fAeBeD5241c
PAYMENT_PROCESSOR_CONTRACT_ADDRESS=0x8B79808075f8ed2c0871A271431b3260bc0D3f70
USDC_CONTRACT_ADDRESS=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913

# Base Sepolia (Chain ID: 84532) - TESTING
BASE_SEPOLIA_CRAWL_NFT_ADDRESS=0xE527DDaC2592FAa45884a0B78E4D377a5D3dF8cc
BASE_SEPOLIA_PAYMENT_PROCESSOR_ADDRESS=0x7C503301eB8fA9dC7C3d2242487f18598321E479
BASE_SEPOLIA_USDC_ADDRESS=0x036CbD53842c5426634e7929541eC2318f3dCF7e

# =============================================================================
# BLOCKCHAIN EXPLORER API KEYS
# =============================================================================
# Get from: https://basescan.org/apis
BASESCAN_API_KEY=your_basescan_api_key_here
ETHERSCAN_API_KEY=your_basescan_api_key_here

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================
# Sentry Error Tracking
# Get from: https://sentry.io/settings/projects/
SENTRY_DSN=https://your_sentry_dsn@sentry.io/project-id
SENTRY_AUTH_TOKEN=your_sentry_auth_token_here
SENTRY_ENVIRONMENT=development

# Google Analytics
GOOGLE_MEASUREMENT_ID=G-XXXXXXXXXX

# =============================================================================
# PAYMENT PROCESSING (Stripe)
# =============================================================================
# Get from: https://dashboard.stripe.com/apikeys
# IMPORTANT: Use test keys for development, live keys for production
STRIPE_SECRET_KEY=sk_test_your_stripe_test_secret_key_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_test_publishable_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_signing_secret_here

# =============================================================================
# CLOUDFLARE
# =============================================================================
# Get from: https://dash.cloudflare.com/profile/api-tokens
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token_here

# =============================================================================
# WALLETCONNECT
# =============================================================================
# Get from: https://cloud.walletconnect.com/
WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# =============================================================================
# JWT SECRETS (Generate secure random values)
# =============================================================================
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_64_byte_random_hex_string_here
JWT_REFRESH_SECRET=your_different_64_byte_random_hex_string_here

# =============================================================================
# NOTES
# =============================================================================
# - For local development, you can create a .env.local file that overrides these values
# - For production deployment, use environment variables from your hosting platform
# - NEVER commit .env files with actual secrets to version control
# - See ENVIRONMENT_SETUP.md for detailed setup instructions
