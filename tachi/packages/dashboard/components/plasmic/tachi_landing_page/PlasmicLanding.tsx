/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: buLarKS5F8q92wwXeZGLFH
// Component: NNa_5iFrBmA-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: 8HcwSFor26rJ/component
import Button from "../../Button"; // plasmic-import: QX58X5UGGXHk/component
import BaseCard from "../../BaseCard"; // plasmic-import: Q4GbpJs1b6iI/component
import Footer from "../../Footer"; // plasmic-import: 86B65UPoRcYg/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: buLarKS5F8q92wwXeZGLFH/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: buLarKS5F8q92wwXeZGLFH/styleTokensProvider
import { _useStyleTokens as useStyleTokens_library_plasmic_color_type } from "../library_plasmic_color_type/PlasmicStyleTokensProvider"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: buLarKS5F8q92wwXeZGLFH/projectcss
import sty from "./PlasmicLanding.module.css"; // plasmic-import: NNa_5iFrBmA-/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tipwXQCWEsbd/icon
import CoinsAltSvgrepoComSvgIcon from "./icons/PlasmicIcon__CoinsAltSvgrepoComSvg"; // plasmic-import: 4uSf7seaeB5_/icon
import BotSvgrepoComSvgIcon from "./icons/PlasmicIcon__BotSvgrepoComSvg"; // plasmic-import: YIMV-R5albbd/icon
import DomainSvgrepoComSvgIcon from "./icons/PlasmicIcon__DomainSvgrepoComSvg"; // plasmic-import: P0KVJMn04eqB/icon
import HourglassEmptySvgrepoComSvgIcon from "./icons/PlasmicIcon__HourglassEmptySvgrepoComSvg"; // plasmic-import: ZKYs-OGmvZS6/icon
import Vector1StrokeIcon from "./icons/PlasmicIcon__Vector1Stroke"; // plasmic-import: QOfdnAILe2bt/icon

createPlasmicElementProxy;

export type PlasmicLanding__VariantMembers = {};
export type PlasmicLanding__VariantsArgs = {};
type VariantPropType = keyof PlasmicLanding__VariantsArgs;
export const PlasmicLanding__VariantProps = new Array<VariantPropType>();

export type PlasmicLanding__ArgsType = {};
type ArgPropType = keyof PlasmicLanding__ArgsType;
export const PlasmicLanding__ArgProps = new Array<ArgPropType>();

export type PlasmicLanding__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  h1?: Flex__<"h1">;
  footer?: Flex__<typeof Footer>;
  buttonSignin?: Flex__<"div">;
  signIn?: Flex__<"div">;
};

export interface DefaultLandingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLanding__RenderFunc(props: {
  variants: PlasmicLanding__VariantsArgs;
  args: PlasmicLanding__ArgsType;
  overrides: PlasmicLanding__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_library_plasmic_color_type =
    useStyleTokens_library_plasmic_color_type();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_library_plasmic_color_type,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <section className={classNames(projectcss.all, sty.section__v9LuV)}>
            <div className={classNames(projectcss.all, sty.freeBox__oyscB)}>
              <div className={classNames(projectcss.all, sty.freeBox__j5PLh)}>
                <div className={classNames(projectcss.all, sty.freeBox__wminJ)}>
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {"the agentic web infrastructure."}
                  </h1>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p8RqA
                  )}
                >
                  {
                    "an open, decentralized protocol for ai agents to exchange value securely across the web."
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ikT4)}>
                <Button
                  className={classNames("__wab_instance", sty.button__fecBv)}
                  color={"tachi6"}
                  endIcon={null}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1VKmf
                    )}
                  >
                    {"start building"}
                  </div>
                </Button>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__vtQa6)}>
            <div className={classNames(projectcss.all, sty.columns___6Cnwt)}>
              <div className={classNames(projectcss.all, sty.column__q1Tz)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__gkhb1
                  )}
                >
                  {"the web's value\nlayer is leaking."}
                </h2>
              </div>
              <div className={classNames(projectcss.all, sty.column__js2N2)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v1NjA
                  )}
                >
                  {
                    "the contract of the internet\u2014content for attention\u2014has been broken. ai workflows have created a high-friction web where value is constantly lost.\n"
                  }
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.columns__v4LdX)}>
              <div className={classNames(projectcss.all, sty.column__xrNa)}>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__nQ8Dv)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ijfNu
                    )}
                  >
                    {"uncompensated extraction"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fbp3O
                    )}
                  >
                    {"73% of publishers are blocking AI crawlers."}
                  </div>
                  <PlasmicImg__
                    alt={"Uncompensated data extraction - 73% of publishers blocking AI crawlers"}
                    className={classNames(sty.img__nwA1M)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/images/landing/features/uncomp_ext.png",
                      fullWidth: 4560,
                      fullHeight: 2565,
                      aspectRatio: undefined
                    }}
                  />
                </BaseCard>
              </div>
              <div className={classNames(projectcss.all, sty.column__yjb0)}>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__eQvPj)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bc1Pa
                    )}
                  >
                    {"not built for autononomy"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v2Hwo
                    )}
                  >
                    {"today's internet cripples automated commerce."}
                  </div>
                  <PlasmicImg__
                    alt={"Internet infrastructure not built for autonomous agents"}
                    className={classNames(sty.img__btf45)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/images/landing/features/no_autonomy.png",
                      fullWidth: 4560,
                      fullHeight: 2565,
                      aspectRatio: undefined
                    }}
                  />
                </BaseCard>
              </div>
              <div className={classNames(projectcss.all, sty.column__hT4HV)}>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__aCcMi)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zpUav
                    )}
                  >
                    {"trust & ownership void"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9ZzRm
                    )}
                  >
                    {"the agentic economy lacks a native trust layer."}
                  </div>
                  <PlasmicImg__
                    alt={"Trust and ownership void in the agentic economy"}
                    className={classNames(sty.img__xPbBx)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/images/landing/features/trust_void.png",
                      fullWidth: 4560,
                      fullHeight: 2565,
                      aspectRatio: undefined
                    }}
                  />
                </BaseCard>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__mjw6J)}
                   style={{
                     position: 'relative',
                     backgroundImage: 'url(/images/landing/background2.png)',
                     backgroundSize: 'cover',
                     backgroundPosition: 'center',
                     backgroundRepeat: 'no-repeat'
                   }}>
            <div className={classNames(projectcss.all, sty.columns___1Fg42)}>
              <div className={classNames(projectcss.all, sty.column__mpf6Y)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__x7Rh2
                  )}
                >
                  {"tachi: a simple\nprotocol"}
                </h2>
              </div>
              <div className={classNames(projectcss.all, sty.column__bUes5)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d5W9R
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-hVfcb8r6pWxK)" }}
                    >
                      {"creators: "}
                    </span>
                    <React.Fragment>
                      {
                        "solve uncompensated value extraction with frictionless micropayments. "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-hVfcb8r6pWxK)" }}
                    >
                      {"developers: "}
                    </span>
                    <React.Fragment>
                      {"access content with instant stablecoin settlement. "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-hVfcb8r6pWxK)" }}
                    >
                      {"agents:"}
                    </span>
                    <React.Fragment>
                      {
                        " enable secure, autonomous commerce with verifiable on-chain workflows.\n\n"
                      }
                    </React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__o8HFc)}>
            <div className={classNames(projectcss.all, sty.columns__v9E09)}>
              <div className={classNames(projectcss.all, sty.column__m8TRx)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__emN8W
                  )}
                >
                  {"for creators"}
                </h2>
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__y7HtS
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"get paid for every view."}
                    </span>
                  </React.Fragment>
                </h3>
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__mj6Va
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"set your own price."}
                    </span>
                  </React.Fragment>
                </h3>
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__xXjxn
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"simple and sovereign."}
                    </span>
                  </React.Fragment>
                </h3>
                <PlasmicImg__
                  alt={"Creator benefits - get paid for every view, set your own price"}
                  className={classNames(sty.img__psCw5)}
                  displayHeight={"800px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/images/landing/creator_steps.png",
                    fullWidth: 4560,
                    fullHeight: 2565,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__lrUkX)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__lhdfF
                  )}
                >
                  {"for developers"}
                </h2>
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__icMn7
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"price your resource."}
                    </span>
                  </React.Fragment>
                </h3>
                <PlasmicImg__
                  alt={"Developer feature - price your resource with simple configuration"}
                  className={classNames(sty.img__dpDef)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/images/landing/dev1.png",
                    fullWidth: 842,
                    fullHeight: 408,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__pWaIl
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"pay and access on-demand."}
                    </span>
                  </React.Fragment>
                </h3>
                <PlasmicImg__
                  alt={"Pay and access on-demand with instant stablecoin settlement"}
                  className={classNames(sty.img__fyhal)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/images/landing/dev2.png",
                    fullWidth: 930,
                    fullHeight: 372,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___0FI
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-fR_GCupq8N2Z)" }}
                    >
                      {"verify on-chain."}
                    </span>
                  </React.Fragment>
                </h3>
                <PlasmicImg__
                  alt={"Verify transactions on-chain with transparent blockchain records"}
                  className={classNames(sty.img___2SAkr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/images/landing/dev3.png",
                    fullWidth: 872,
                    fullHeight: 406,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <section className={classNames(projectcss.all, sty.section__lu05Z)} 
                     style={{
                       position: 'relative',
                       backgroundImage: 'url(/images/landing/wave1.png)',
                       backgroundSize: 'cover',
                       backgroundPosition: 'center left',
                       backgroundRepeat: 'no-repeat'
                     }}>
              <div className={classNames(projectcss.all, sty.freeBox__epoCq)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__f8XTp
                  )}
                >
                  {"tachi analytics dashboard."}
                </h2>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard___1TbxA)}
                  dashboard={true}
                  long={true}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__p162)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yquTv
                      )}
                    >
                      {"USDC SPENT/EARNED"}
                    </div>
                    <CoinsAltSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__wySfw)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wkgGo
                    )}
                  >
                    {"2100 USDC"}
                  </div>
                </BaseCard>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__dnA5K)}
                  dashboard={true}
                  long={true}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qg6L6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oJm5J
                      )}
                    >
                      {"UNIQUE CRAWLERS"}
                    </div>
                    <BotSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg___48A7E)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rdiI3
                    )}
                  >
                    {"74"}
                  </div>
                </BaseCard>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__eSg0O)}
                  dashboard={true}
                  long={true}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ihxj4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hydzN
                      )}
                    >
                      {"TOP DOMAINS"}
                    </div>
                    <DomainSvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__xDCuo)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n4R3C
                    )}
                  >
                    {"finance.example.com\ncrawler.example.com"}
                  </div>
                </BaseCard>
                <BaseCard
                  className={classNames("__wab_instance", sty.baseCard__iaeQf)}
                  dashboard={true}
                  long={true}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__doUgA)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tUQa9
                      )}
                    >
                      {"TIME TO VERIFY"}
                    </div>
                    <HourglassEmptySvgrepoComSvgIcon
                      className={classNames(projectcss.all, sty.svg__yZuXj)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qhkmW
                    )}
                  >
                    {"2.7s"}
                  </div>
                </BaseCard>
              </div>
              <Button
                className={classNames("__wab_instance", sty.button__i8XJ6)}
                color={"tachi6"}
                endIcon={null}
                submitsForm={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8O0V6
                  )}
                >
                  {"start building"}
                </div>
              </Button>
            </section>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />

          <div
            data-plasmic-name={"buttonSignin"}
            data-plasmic-override={overrides.buttonSignin}
            className={classNames(projectcss.all, sty.buttonSignin)}
          >
            <div
              data-plasmic-name={"signIn"}
              data-plasmic-override={overrides.signIn}
              className={classNames(projectcss.all, sty.signIn)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2DXet
                )}
              >
                {"Sign in"}
              </div>
            </div>
            <Vector1StrokeIcon
              className={classNames(projectcss.all, sty.svg__nIhDh)}
              role={"img"}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "footer", "buttonSignin", "signIn"],
  header: ["header"],
  h1: ["h1"],
  footer: ["footer"],
  buttonSignin: ["buttonSignin", "signIn"],
  signIn: ["signIn"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  h1: "h1";
  footer: typeof Footer;
  buttonSignin: "div";
  signIn: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLanding__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLanding__VariantsArgs;
    args?: PlasmicLanding__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLanding__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLanding__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLanding__ArgProps,
          internalVariantPropNames: PlasmicLanding__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLanding__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLanding";
  } else {
    func.displayName = `PlasmicLanding.${nodeName}`;
  }
  return func;
}

export const PlasmicLanding = Object.assign(
  // Top-level PlasmicLanding renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    footer: makeNodeComponent("footer"),
    buttonSignin: makeNodeComponent("buttonSignin"),
    signIn: makeNodeComponent("signIn"),

    // Metadata about props expected for PlasmicLanding
    internalVariantProps: PlasmicLanding__VariantProps,
    internalArgProps: PlasmicLanding__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLanding;
/* prettier-ignore-end */
